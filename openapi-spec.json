{
  "openapi": "3.1.0",
  "info": {
    "title": "Gemini Worker API",
    "description": "A Cloudflare Worker that provides AI-powered image generation and editing capabilities using Google's Gemini API",
    "version": "0.1.0",
    "contact": {
      "name": "API Support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://gemini-worker.guitaripod.workers.dev",
      "description": "Production server"
    },
    {
      "url": "http://localhost:8787",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Returns the health status of the API",
        "operationId": "getHealth",
        "tags": ["System"],
        "security": [],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthStatus"
                },
                "example": {
                  "status": "healthy"
                }
              }
            }
          }
        }
      }
    },
    "/openapi": {
      "get": {
        "summary": "OpenAPI Specification",
        "description": "Returns the OpenAPI specification for this API",
        "operationId": "getOpenApiSpec",
        "tags": ["System"],
        "security": [],
        "responses": {
          "200": {
            "description": "OpenAPI specification retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "OpenAPI 3.1.0 specification document"
                }
              }
            }
          }
        }
      }
    },
    "/generate": {
      "post": {
        "summary": "Generate Image from Text",
        "description": "Generates a new image based on a text prompt using Google's Gemini API",
        "operationId": "generateImage",
        "tags": ["Image Generation"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateImageRequest"
              },
              "examples": {
                "simple": {
                  "summary": "Simple generation request",
                  "value": {
                    "prompt": "A sunset over mountains with a lake in the foreground"
                  }
                },
                "detailed": {
                  "summary": "Detailed generation request",
                  "value": {
                    "prompt": "A futuristic robot standing in a modern office, photorealistic, 4k quality, dramatic lighting"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                },
                "example": {
                  "success": true,
                  "image": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg=="
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error or Gemini API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register New User",
        "description": "Creates a new user account and returns an API key",
        "operationId": "registerUser",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              },
              "example": {
                "email": "user@example.com",
                "password": "securepassword123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                },
                "example": {
                  "success": true,
                  "api_key": "gp_1234567890_abcdef"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User Login",
        "description": "Authenticates a user and returns their API key",
        "operationId": "loginUser",
        "tags": ["Authentication"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "example": {
                "email": "user@example.com",
                "password": "securepassword123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                },
                "example": {
                  "success": true,
                  "api_key": "gp_1234567890_abcdef"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/edit": {
      "post": {
        "summary": "Edit Image with Text Prompt",
        "description": "Edits an existing image based on a text prompt using Google's Gemini API",
        "operationId": "editImage",
        "tags": ["Image Generation"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditImageRequest"
              },
              "examples": {
                "transform": {
                  "summary": "Transform an image",
                  "value": {
                    "prompt": "Transform this blue circle into a yellow sun with rays around it",
                    "image": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==",
                    "mime_type": "image/png"
                  }
                },
                "enhance": {
                  "summary": "Enhance an image",
                  "value": {
                    "prompt": "Add a dramatic sunset background to this landscape",
                    "image": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg=="
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                },
                "example": {
                  "success": true,
                  "image": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg=="
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error or Gemini API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/generate_video": {
      "post": {
        "summary": "Generate Video from Text Prompt",
        "description": "Generates a new video based on a text prompt using Google's Veo API",
        "operationId": "generateVideo",
        "tags": ["Video Generation"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateVideoRequest"
              },
              "examples": {
                "simple": {
                  "summary": "Simple video generation",
                  "value": {
                    "prompt": "A cat playing with a ball of yarn in a sunny garden"
                  }
                },
                "detailed": {
                  "summary": "Detailed video generation with parameters",
                  "value": {
                    "prompt": "A futuristic cityscape at sunset with flying cars",
                    "negative_prompt": "dark, stormy, rain",
                    "aspect_ratio": "16:9",
                    "resolution": "1280x720"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video generation started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoOperationResponse"
                },
                "example": {
                  "success": true,
                  "operation_name": "projects/project-id/locations/us-central1/operations/operation-id"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error or Veo API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/edit_video": {
      "post": {
        "summary": "Edit Video with Image and Text Prompt",
        "description": "Edits a video based on an input image and text prompt using Google's Veo API",
        "operationId": "editVideo",
        "tags": ["Video Generation"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditVideoRequest"
              },
              "examples": {
                "transform": {
                  "summary": "Transform image into video",
                  "value": {
                    "prompt": "A butterfly emerging from a cocoon and flying away",
                    "image": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==",
                    "mime_type": "image/png"
                  }
                },
                "detailed": {
                  "summary": "Detailed video editing with parameters",
                  "value": {
                    "prompt": "A majestic eagle soaring through the clouds",
                    "image": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==",
                    "mime_type": "image/jpeg",
                    "negative_prompt": "ground, trees, buildings",
                    "aspect_ratio": "9:16",
                    "resolution": "720x1280"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video editing started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoOperationResponse"
                },
                "example": {
                  "success": true,
                  "operation_name": "projects/project-id/locations/us-central1/operations/operation-id"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error or Veo API error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/video_status/{operation}": {
      "get": {
        "summary": "Check Video Generation Status",
        "description": "Checks the status of a video generation or editing operation",
        "operationId": "getVideoStatus",
        "tags": ["Video Generation"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "operation",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The operation name returned from video generation/editing request",
            "example": "projects/project-id/locations/us-central1/operations/operation-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Video operation status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoStatusResponse"
                },
                "examples": {
                  "in_progress": {
                    "summary": "Video generation in progress",
                    "value": {
                      "success": true,
                      "done": false
                    }
                  },
                  "completed": {
                    "summary": "Video generation completed",
                    "value": {
                      "success": true,
                      "done": true,
                      "video_uri": "https://storage.googleapis.com/generated-videos/video.mp4"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Operation not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "API key obtained from user registration or login"
      }
    },
    "schemas": {
      "HealthStatus": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["healthy", "unhealthy"],
            "description": "Health status of the service"
          }
        }
      },
      "GenerateImageRequest": {
        "type": "object",
        "required": ["prompt"],
        "properties": {
          "prompt": {
            "type": "string",
            "description": "Text prompt describing the image to generate",
            "minLength": 1,
            "maxLength": 10000,
            "example": "A beautiful sunset over mountains"
          }
        }
      },
      "EditImageRequest": {
        "type": "object",
        "required": ["prompt", "image"],
        "properties": {
          "prompt": {
            "type": "string",
            "description": "Text prompt describing how to edit the image",
            "minLength": 1,
            "maxLength": 10000,
            "example": "Add a rainbow to the sky"
          },
          "image": {
            "type": "string",
            "description": "Base64-encoded image data",
            "format": "byte",
            "example": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg=="
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of the image (defaults to image/jpeg if not specified)",
            "enum": ["image/jpeg", "image/png", "image/gif", "image/webp"],
            "default": "image/jpeg",
            "example": "image/png"
          }
        }
      },
      "ImageResponse": {
        "type": "object",
        "required": ["success", "image"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the operation was successful"
          },
          "image": {
            "type": "string",
            "description": "Base64-encoded generated or edited image",
            "format": "byte"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message describing what went wrong"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "minLength": 6,
            "example": "securepassword123"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "securepassword123"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "required": ["success"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the authentication was successful"
          },
          "api_key": {
            "type": "string",
            "description": "API key for authenticated requests",
            "example": "gp_1234567890_abcdef"
          },
          "error": {
            "type": "string",
            "description": "Error message if authentication failed"
          }
        }
      },
      "GenerateVideoRequest": {
        "type": "object",
        "required": ["prompt"],
        "properties": {
          "prompt": {
            "type": "string",
            "description": "Text prompt describing the video to generate",
            "minLength": 1,
            "maxLength": 10000,
            "example": "A cat playing with a ball of yarn in a sunny garden"
          },
          "negative_prompt": {
            "type": "string",
            "description": "Text prompt describing what to avoid in the video",
            "example": "dark, stormy, rain"
          },
          "aspect_ratio": {
            "type": "string",
            "description": "Aspect ratio of the generated video",
            "enum": ["16:9", "9:16", "1:1"],
            "example": "16:9"
          },
          "resolution": {
            "type": "string",
            "description": "Resolution of the generated video",
            "enum": ["1280x720", "720x1280", "1024x1024"],
            "example": "1280x720"
          }
        }
      },
      "EditVideoRequest": {
        "type": "object",
        "required": ["prompt", "image", "mime_type"],
        "properties": {
          "prompt": {
            "type": "string",
            "description": "Text prompt describing how to edit the video",
            "minLength": 1,
            "maxLength": 10000,
            "example": "A butterfly emerging from a cocoon and flying away"
          },
          "image": {
            "type": "string",
            "description": "Base64-encoded image data to use as input for video editing",
            "format": "byte",
            "example": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg=="
          },
          "mime_type": {
            "type": "string",
            "description": "MIME type of the input image",
            "enum": ["image/jpeg", "image/png", "image/gif", "image/webp"],
            "example": "image/png"
          },
          "negative_prompt": {
            "type": "string",
            "description": "Text prompt describing what to avoid in the video",
            "example": "ground, trees, buildings"
          },
          "aspect_ratio": {
            "type": "string",
            "description": "Aspect ratio of the generated video",
            "enum": ["16:9", "9:16", "1:1"],
            "example": "9:16"
          },
          "resolution": {
            "type": "string",
            "description": "Resolution of the generated video",
            "enum": ["1280x720", "720x1280", "1024x1024"],
            "example": "720x1280"
          }
        }
      },
      "VideoOperationResponse": {
        "type": "object",
        "required": ["success"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the video operation was started successfully"
          },
          "operation_name": {
            "type": "string",
            "description": "The operation name to use for checking status",
            "example": "projects/project-id/locations/us-central1/operations/operation-id"
          },
          "error": {
            "type": "string",
            "description": "Error message if the operation failed to start"
          }
        }
      },
      "VideoStatusResponse": {
        "type": "object",
        "required": ["success", "done"],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the status check was successful"
          },
          "done": {
            "type": "boolean",
            "description": "Whether the video generation is complete"
          },
          "video_uri": {
            "type": "string",
            "description": "URI of the generated video (only present when done is true)",
            "format": "uri",
            "example": "https://storage.googleapis.com/generated-videos/video.mp4"
          },
          "error": {
            "type": "string",
            "description": "Error message if the operation failed"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and registration endpoints"
    },
    {
      "name": "System",
      "description": "System and health endpoints"
    },
    {
      "name": "Image Generation",
      "description": "Endpoints for generating and editing images using Gemini AI"
    },
    {
      "name": "Video Generation",
      "description": "Endpoints for generating and editing videos using Veo AI"
    }
  ]
}